<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- springmvc自动扫描的这些包下的对应注解 use-default-filters 是否自动扫描带有@Component、@Repository、@Service和@Controller的类 -->
	<context:component-scan base-package="com.he.spring" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!--处理静态资源 两者选其一都可以 mvc:resources更好点 <mvc:default-servlet-handler /> -->
	<mvc:resources mapping="/static/**" location="/static/" />
	<!--启用SpringMVC的注解功能,它会自动注册HandlerMapping、HandlerAdapter、ExceptionResolver的相关实例 -->
	<mvc:annotation-driven />
	<!--springmvc的是图解析器 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="prefix" value="/WEB-INF/view" />
		<property name="suffix" value=".jsp" />
	</bean>
    <!--开启aop注解支持 激活自动代理功能 只能以controller层为切入点
    -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--
    // MEINFO:2017/5/19 14:19   配置文件形式  要对controller层实现aop，Aop的配置应该和springmvc的配置写在同一个文件里,否则不起作用
    <bean id="aspect" class="com.he.spring.aop.AspectTest"/>
    <aop:config >
        <aop:aspect id="qie_mian" ref="aspect">
            <aop:pointcut id="qie_ru_dian" expression="execution(* com.he.spring.controller.*.*(..))"/>
            <aop:before method="before" pointcut-ref="qie_ru_dian"/>
            <aop:after  method="after" pointcut-ref="qie_ru_dian"/>
        </aop:aspect>
    </aop:config>
    -->
</beans>
