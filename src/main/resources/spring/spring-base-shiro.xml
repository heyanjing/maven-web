<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!--凭证匹配器
        org.apache.shiro.authc.credential.HashedCredentialsMatcher
        com.he.spring.shiro.credentials.LimitHashedCredentialsMatcher
    -->
    <bean id="credentialsMatcher" class="com.he.spring.shiro.credentials.LimitHashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
        <property name="hashIterations" value="1024"/>
        <property name="person" ref="p1"/>
        <property name="customRedisCacheManager" ref="customRedisCacheManager"/>
    </bean>
    <!--自定义realm-->
    <bean id="shiroRealm" class="com.he.spring.shiro.realm.ShiroRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="customRedisCacheManager" ref="customRedisCacheManager"/>
    </bean>


    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
    <!-- rememberMe Cookie模板 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="60000"/>
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 基于Redis -->
    <bean id="customRedisSessionDao" class="com.he.spring.shiro.redis.CustomRedisSessionDao">
        <property name="sessionKeyPrefix" value="web-session-"/>
        <property name="redisTemplate" ref="redisTemplate"/>
        <property name="activeSessionsCacheName" value="shiroSessionCache"/>
        <!-- 会话ID生成器 默认就是使用该生成器
            <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
            <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    -->
    </bean>
    <bean id="customRedisCacheManager" class="com.he.spring.shiro.redis.CustomRedisCacheManager">
        <property name="cacheKeyPrefix" value="web-cache-"/>
    </bean>


    <!-- 会话验证调度器
        用于定期的验证会话是否已过期，如果过期将停止会话；
    -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="600000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="600000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="customRedisSessionDao"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehcacheManager"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>


    <bean id="kickoutSessionControlFilter" class="com.he.spring.shiro.filter.KickoutSessionControlFilter">
        <property name="cacheManager" ref="customRedisCacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="kickoutAfter" value="false"/>
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="/"/>
    </bean>

    <bean id="ajaxFormAuthenticationFilter" class="com.he.spring.shiro.filter.AjaxFormAuthenticationFilter" />

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面-->
        <property name="loginUrl" value="/"/>
        <!--访问未授权的路径时跳转的页面-->
        <property name="unauthorizedUrl" value="/error/403"/>
        <property name="filters">
            <util:map>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
                <entry key="ajaxAuthc" value-ref="ajaxFormAuthenticationFilter"/>
            </util:map>
        </property>
        <!--
        配置那些路径需要那些权限 ,依次匹配，匹配成功就不会再匹配
        anon    可以匿名访问
        authc   必须认证后在访问（登陆） 就算rememberMe存在也会跳转至登陆页面
        logout  注销,会自动清除shiro的缓存
        -->
        <property name="filterChainDefinitions">
            <value>
                /static/**=anon
                /kaptcha/**=anon
                /code/**=anon
                /=anon
                /user/login=anon
                /user/logout*=logout
                /user**=kickout


                /page1=roles[user1]
                /page2=roles[user2]
                /page3=user
                /person/**=kickout,ajaxAuthc
                /**=ajaxAuthc
                <!--
                /user/**=anon
                /person/**=anon
                /home/**=anon
                /dog/**=anon


                /mydemo/login=anon
                /mydemo/getVerifyCodeImage=anon
                /main**=authc
                /user/info**=authc
                /admin/listUser**=authc,perms[admin:manage]
                / = anon
				/user/psd/** = anon
				/update = anon
				/help = anon
				/about = anon
				/reg/** = anon
				/exam/** = anon
				/face/** = anon
				/mobile/** = anon
				/test/** = anon
				/logout = logout

				/user/** = ajaxAuthc,kickout
				/org/** = anon
				/admin/** = ajaxAuthc
				/monitor/** = ajaxAuthc
				/print/** = ajaxAuthc-->
            </value>
        </property>
    </bean>

    <!--
    Shiro生命周期处理器

    -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


</beans>
